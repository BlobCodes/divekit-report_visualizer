<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Divekit Report</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
  </head>
  <body>
    <!-- Erste Sektion: Zusammenfassende Informationen, welche den gesamten Report betreffen -->
    <section class="hero has-background-white-ter">
      <div class="hero-body">
        <div class="container">
          <div class="columns is-1">
            <div class="column">
              <p class="is-size-6 mb-2 has-text-grey">
                <!-- Die hier angezeigte Zeit sollte optimalerweise der Commit-Zeit entsprechen und nicht der Generierungs-Zeit -->
                Report vom <%= commit_tz.to_s("%d.%m.%Y um %R (%^Z)") %>, <span>Commit <a href="<%= commit_url %>"><% HTML.escape(commit_name, io) %></a></span>
              </p>

              <% if successful_report_count == total_report_count %>
                <h1 class="title has-text-success">
                  Alle Tests sind gelungen
                </h1>
              <% elsif successful_report_count == 0 %>
                <h1 class="title has-text-danger">
                  Alle Tests sind fehlgeschlagen
                </h1>
              <% else %>
                <h1 class="title" style="color: hsl(48, 100%, 35%)">
                  Einige Tests sind fehlgeschlagen
                </h1>
              <% end %>

              <p class="subtitle">
                <strong><%= successful_report_count %>/<%= total_report_count %></strong> Tests erfolgreich
              </p>
            </div>
            <div class="column is-narrow is-hidden-mobile">
              <figure class="image is-96x96">
                <img loading="lazy" src="./logo.svg">
              </figure>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="section">
      <div class="container">
        <div class="columns is-1 is-flex-direction-row-reverse">
          <aside class="menu column is-narrow">
            <input type="checkbox" role="show-all-toggle" id="show-all-tests" flow-id="show-all-tests" checked/>
            <label for="show-all-tests" class="no-text-selection">Zeige erfolgreiche Tests</label>
            <hr/>

            <div class="report-selection">
              <% reports_by_category.each do |category, reports| %>
                <%
                  successful_reports = reports.count { |report| report.status.success? }
                  category_class = case successful_reports
                                   when 0 then ""
                                   when reports.size then "is-success"
                                   else "is-mixed"
                                   end
                %>
                <h2 class="is-size-6 <%= category_class %> has-text-weight-medium mt-2"><% HTML.escape(category, io) %></h2>
                <% reports.each do |report| %>
                  <label class="report-item <%= "is-success" if report.status.success? %> no-text-selection">
                    <input type="radio" name="report-selector" value="<% HTML.escape(report.name, io) %>" checked/>
                    <% HTML.escape(report.name, io) %>
                  </label>
                <% end %>
              <% end %>
            </div>
          </aside>

          <div class="column" style="overflow: hidden;">
            <% reports_by_category.each do |category, reports| %>
              <% reports.each do |report| %>
                <div class="report" id="report-<% HTML.escape(report.name, io) %>">
                  <% report.to_html(io) %>
                </div>
              <% end %>
            <% end %>
          </div>
        </div>
      </div>
    </section>
  </body>

  <style>
    .no-text-selection {
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    .menu {
      min-width: 300px;
      border-left: 2px solid #ccc;
    }

    .report {
      display: none;
    }

    /*
     * Test Selection -> Test Button background
     */

    .report-item {
      cursor: pointer;
      overflow: hidden;
      white-space: nowrap;
      display: block;
      padding: 4px 8px;
      text-align: left;
    }

     .report-item:hover {
      background-color: hsl(0, 0%, 96%);
    }

    .report-item:has(> input:checked) {
      background-color: hsl(0, 0%, 92%);
    }

    /*
     * Test Selection -> Hide successful tests if checkbox unchecked.
     */

    #show-all-tests[type="checkbox"] ~ .report-selection > .is-success {
      display: none;
    }

    #show-all-tests[type="checkbox"]:checked ~ .report-selection > .is-success {
      display: block;
    }

    /*
     * Test Selection -> Circle
     */

    .report-item > input {
      position: absolute;
      opacity: 0;
      cursor: pointer;
      height: 0;
      width: 0;
    }

    .report-item:before {
      content: '';
      display: inline-block;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      margin-right: 8px;
      background:	hsl(348, 100%, 61%);
      transform: translateY(-0.075em);
    }

    .report-item.is-success:before {
      background:	hsl(141, 71%, 48%);
    }

    /*
     * Test Selection -> Section Titles
     */

    .report-selection > h2 {
      color:	hsl(348, 100%, 61%);
    }

    .report-selection > h2.is-mixed {
      color:	hsl(48, 100%, 35%);
    }

    .report-selection > h2.is-success {
      color:	hsl(141, 71%, 48%);
    }

    pre {
      overflow: scroll;
      max-width: 100%;
    }

    .line {
      white-space: pre;
      display: block;
      padding: 0 16px;
    }

    .line.highlight {
      background-color: #aaa;
      animation: line-highlight 750ms linear;
    }
  </style>

  <script>
    let reportSelectors = document.getElementsByName('report-selector');
    let reports = document.getElementsByName('report');
    let shownReport = null;

    for (let i = 0; i < reportSelectors.length; i += 1) {
      reportSelectors[i].addEventListener('click', updateContent);
    }

    function updateContent() {
      let selectedValue = null;
      for (let i = 0; i < reportSelectors.length; i += 1) {
        if (reportSelectors[i].checked) {
          selectedValue = reportSelectors[i].value;
          break;
        }
      }
      if (shownReport !== null) {
        shownReport.style.display = null;
      }
      shownReport = document.getElementById('report-' + selectedValue);
      if (shownReport !== null) {
        shownReport.style.display = "block";
      }
    }

    updateContent();
  </script>
</html>